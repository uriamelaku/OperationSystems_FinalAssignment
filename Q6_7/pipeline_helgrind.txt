==11668== Helgrind, a thread error detector
==11668== Copyright (C) 2007-2017, and GNU GPL'd, by OpenWorks LLP et al.
==11668== Using Valgrind-3.22.0 and LibVEX; rerun with -h for copyright info
==11668== Command: ./pipeline_server
==11668== 
Server is running. Waiting for clients...
Accepted new client
==11668== ---Thread-Announcement------------------------------------------
==11668== 
==11668== Thread #1 is the program's root thread
==11668== 
==11668== ----------------------------------------------------------------
==11668== 
==11668== Thread #1: pthread_cond_{signal,broadcast}: dubious: associated lock is not held by any thread
==11668==    at 0x4851C1D: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-amd64-linux.so)
==11668==    by 0x12286D: ActiveObject::post(std::function<void ()>) (pipeline_server.cpp:78)
==11668==    by 0x11E965: handleClientPipeline(int) (pipeline_server.cpp:211)
==11668==    by 0x11FFA5: main (pipeline_server.cpp:435)
==11668== 
==11668== ----------------------------------------------------------------
==11668== 
==11668== Thread #1: pthread_cond_{signal,broadcast}: dubious: associated lock is not held by any thread
==11668==    at 0x4851C1D: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-amd64-linux.so)
==11668==    by 0x12286D: ActiveObject::post(std::function<void ()>) (pipeline_server.cpp:78)
==11668==    by 0x11F0E5: handleClientPipeline(int) (pipeline_server.cpp:291)
==11668==    by 0x11FFA5: main (pipeline_server.cpp:435)
==11668== 
==11668== ---Thread-Announcement------------------------------------------
==11668== 
==11668== Thread #3 was created
==11668==    at 0x4C4CA23: clone (clone.S:76)
==11668==    by 0x4C4CBA2: __clone_internal_fallback (clone-internal.c:64)
==11668==    by 0x4C4CBA2: __clone_internal (clone-internal.c:109)
==11668==    by 0x4BBF53F: create_thread (pthread_create.c:297)
==11668==    by 0x4BC0194: pthread_create@@GLIBC_2.34 (pthread_create.c:836)
==11668==    by 0x4854975: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-amd64-linux.so)
==11668==    by 0x4963EB0: std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33)
==11668==    by 0x1234F0: std::thread::thread<ActiveObject::ActiveObject()::{lambda()#1}, , void>(ActiveObject::ActiveObject()::{lambda()#1}&&) (std_thread.h:164)
==11668==    by 0x122767: ActiveObject::ActiveObject() (pipeline_server.cpp:42)
==11668==    by 0x11E290: handleClientPipeline(int) (pipeline_server.cpp:144)
==11668==    by 0x11FFA5: main (pipeline_server.cpp:435)
==11668== 
==11668== ---Thread-Announcement------------------------------------------
==11668== 
==11668== Thread #2 was created
==11668==    at 0x4C4CA23: clone (clone.S:76)
==11668==    by 0x4C4CBA2: __clone_internal_fallback (clone-internal.c:64)
==11668==    by 0x4C4CBA2: __clone_internal (clone-internal.c:109)
==11668==    by 0x4BBF53F: create_thread (pthread_create.c:297)
==11668==    by 0x4BC0194: pthread_create@@GLIBC_2.34 (pthread_create.c:836)
==11668==    by 0x4854975: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-amd64-linux.so)
==11668==    by 0x4963EB0: std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33)
==11668==    by 0x1234F0: std::thread::thread<ActiveObject::ActiveObject()::{lambda()#1}, , void>(ActiveObject::ActiveObject()::{lambda()#1}&&) (std_thread.h:164)
==11668==    by 0x122767: ActiveObject::ActiveObject() (pipeline_server.cpp:42)
==11668==    by 0x11E281: handleClientPipeline(int) (pipeline_server.cpp:144)
==11668==    by 0x11FFA5: main (pipeline_server.cpp:435)
==11668== 
==11668== ----------------------------------------------------------------
==11668== 
==11668== Possible data race during read of size 4 at 0x4E36F64 by thread #3
==11668== Locks held: none
==11668==    at 0x485A49E: memmove (in /usr/libexec/valgrind/vgpreload_helgrind-amd64-linux.so)
==11668==    by 0x10FA87: int* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<int const, int>(int const*, int const*, int*) (stl_algobase.h:437)
==11668==    by 0x10F8AA: int* std::__copy_move_a2<false, int const*, int*>(int const*, int const*, int*) (stl_algobase.h:506)
==11668==    by 0x10F5A3: int* std::__copy_move_a1<false, int const*, int*>(int const*, int const*, int*) (stl_algobase.h:533)
==11668==    by 0x10F997: int* std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) (stl_algobase.h:540)
==11668==    by 0x10F6CD: int* std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) (stl_algobase.h:633)
==11668==    by 0x10F3AD: int* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) (stl_uninitialized.h:147)
==11668==    by 0x10EFF7: int* std::uninitialized_copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*) (stl_uninitialized.h:185)
==11668==    by 0x10EBB6: int* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, int>(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, int*, std::allocator<int>&) (stl_uninitialized.h:373)
==11668==    by 0x10E3C1: std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&) (stl_vector.h:606)
==11668==    by 0x10EA1A: void std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>(std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > const&) (stl_construct.h:119)
==11668==    by 0x10E1D2: std::vector<int, std::allocator<int> >* std::__do_uninit_copy<__gnu_cxx::__normal_iterator<std::vector<int, std::allocator<int> > const*, std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > > >, std::vector<int, std::allocator<int> >*>(__gnu_cxx::__normal_iterator<std::vector<int, std::allocator<int> > const*, std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > > >, __gnu_cxx::__normal_iterator<std::vector<int, std::allocator<int> > const*, std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > > >, std::vector<int, std::allocator<int> >*) (stl_uninitialized.h:120)
==11668== 
==11668== This conflicts with a previous write of size 4 by thread #2
==11668== Locks held: none
==11668==    at 0x10C00F: Graph::addEdge(int, int, int) (graph.cpp:26)
==11668==    by 0x11CE6A: handleClientPipeline(int)::{lambda()#1}::operator()() const (pipeline_server.cpp:213)
==11668==    by 0x12180F: void std::__invoke_impl<void, handleClientPipeline(int)::{lambda()#1}&>(std::__invoke_other, handleClientPipeline(int)::{lambda()#1}&) (invoke.h:61)
==11668==    by 0x120D90: std::enable_if<is_invocable_r_v<void, handleClientPipeline(int)::{lambda()#1}&>, void>::type std::__invoke_r<void, handleClientPipeline(int)::{lambda()#1}&>(handleClientPipeline(int)::{lambda()#1}&) (invoke.h:111)
==11668==    by 0x1205C4: std::_Function_handler<void (), handleClientPipeline(int)::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:290)
==11668==    by 0x12345F: std::function<void ()>::operator()() const (std_function.h:591)
==11668==    by 0x122538: ActiveObject::ActiveObject()::{lambda()#1}::operator()() const (pipeline_server.cpp:58)
==11668==    by 0x12601F: void std::__invoke_impl<void, ActiveObject::ActiveObject()::{lambda()#1}>(std::__invoke_other, ActiveObject::ActiveObject()::{lambda()#1}&&) (invoke.h:61)
==11668==  Address 0x4e36f64 is 4 bytes inside a block of size 8 alloc'd
==11668==    at 0x4849023: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_helgrind-amd64-linux.so)
==11668==    by 0x10E2A9: std::__new_allocator<int>::allocate(unsigned long, void const*) (new_allocator.h:151)
==11668==    by 0x10DBC6: allocate (alloc_traits.h:482)
==11668==    by 0x10DBC6: std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) (stl_vector.h:381)
==11668==    by 0x10D412: std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long) (stl_vector.h:398)
==11668==    by 0x10C8BE: std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&) (stl_vector.h:335)
==11668==    by 0x10E372: std::vector<int, std::allocator<int> >::vector(std::vector<int, std::allocator<int> > const&) (stl_vector.h:603)
==11668==    by 0x10EA1A: void std::_Construct<std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > const&>(std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> > const&) (stl_construct.h:119)
==11668==    by 0x10E8FE: std::vector<int, std::allocator<int> >* std::__do_uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >(std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > const&) (stl_uninitialized.h:267)
==11668==    by 0x10E091: std::vector<int, std::allocator<int> >* std::__uninitialized_fill_n<false>::__uninit_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >(std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > const&) (stl_uninitialized.h:284)
==11668==    by 0x10DDE4: std::vector<int, std::allocator<int> >* std::uninitialized_fill_n<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > >(std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > const&) (stl_uninitialized.h:327)
==11668==    by 0x10D7D7: std::vector<int, std::allocator<int> >* std::__uninitialized_fill_n_a<std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> >, std::vector<int, std::allocator<int> > >(std::vector<int, std::allocator<int> >*, unsigned long, std::vector<int, std::allocator<int> > const&, std::allocator<std::vector<int, std::allocator<int> > >&) (stl_uninitialized.h:472)
==11668==    by 0x10CDE2: std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_fill_insert(__gnu_cxx::__normal_iterator<std::vector<int, std::allocator<int> >*, std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > > >, unsigned long, std::vector<int, std::allocator<int> > const&) (vector.tcc:592)
==11668==  Block was alloc'd by thread #1
==11668== 
==11668== ----------------------------------------------------------------
==11668== 
==11668== Possible data race during read of size 1 at 0x135320 by thread #1
==11668== Locks held: none
==11668==    at 0x11F119: handleClientPipeline(int) (pipeline_server.cpp:302)
==11668==    by 0x11FFA5: main (pipeline_server.cpp:435)
==11668== 
==11668== This conflicts with a previous write of size 1 by thread #3
==11668== Locks held: none
==11668==    at 0x11D7A2: handleClientPipeline(int)::{lambda()#4}::operator()() const (pipeline_server.cpp:294)
==11668==    by 0x121A21: void std::__invoke_impl<void, handleClientPipeline(int)::{lambda()#4}&>(std::__invoke_other, handleClientPipeline(int)::{lambda()#4}&) (invoke.h:61)
==11668==    by 0x1211A7: std::enable_if<is_invocable_r_v<void, handleClientPipeline(int)::{lambda()#4}&>, void>::type std::__invoke_r<void, handleClientPipeline(int)::{lambda()#4}&>(handleClientPipeline(int)::{lambda()#4}&) (invoke.h:111)
==11668==    by 0x1208A0: std::_Function_handler<void (), handleClientPipeline(int)::{lambda()#4}>::_M_invoke(std::_Any_data const&) (std_function.h:290)
==11668==    by 0x12345F: std::function<void ()>::operator()() const (std_function.h:591)
==11668==    by 0x122538: ActiveObject::ActiveObject()::{lambda()#1}::operator()() const (pipeline_server.cpp:58)
==11668==    by 0x12601F: void std::__invoke_impl<void, ActiveObject::ActiveObject()::{lambda()#1}>(std::__invoke_other, ActiveObject::ActiveObject()::{lambda()#1}&&) (invoke.h:61)
==11668==    by 0x125FDA: std::__invoke_result<ActiveObject::ActiveObject()::{lambda()#1}>::type std::__invoke<ActiveObject::ActiveObject()::{lambda()#1}>(ActiveObject::ActiveObject()::{lambda()#1}&&) (invoke.h:96)
==11668==  Address 0x135320 is 0 bytes inside data symbol "_ZZ20handleClientPipelineiE10mstCreated"
==11668== 
==11668== ----------------------------------------------------------------
==11668== 
==11668== Thread #1: pthread_cond_{signal,broadcast}: dubious: associated lock is not held by any thread
==11668==    at 0x4851C1D: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-amd64-linux.so)
==11668==    by 0x12286D: ActiveObject::post(std::function<void ()>) (pipeline_server.cpp:78)
==11668==    by 0x11F186: handleClientPipeline(int) (pipeline_server.cpp:304)
==11668==    by 0x11FFA5: main (pipeline_server.cpp:435)
==11668== 
Accept failed: Interrupted system call
==11668== 
==11668== Use --history-level=approx or =none to gain increased speed, at
==11668== the cost of reduced accuracy of conflicting-access information
==11668== For lists of detected and suppressed errors, rerun with: -s
==11668== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
